using Newtonsoft.Json;
using System.Runtime.Serialization;

namespace bsp4csharp.Protocol;

[DataContract]
public class RunParams
{
    /** A sequence of build targets to run. */
    [DataMember(Name="target")]
    public required BuildTargetIdentifier Target { get; set; }

    /** A unique identifier generated by the client to identify this request.
    * The server may include this id in triggered notifications or responses. */
    [DataMember(Name="originId")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)] 
    public string? OriginId { get; set; }

    /** Optional arguments to the compilation process. */
    [DataMember(Name="arguments")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)] 
    public string[]? Arguments { get; set; }

    /** Optional environment variables to set before running the tests. */
    [DataMember(Name="environmentVariables")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)] 
    public Dictionary<string, string> EnvironmentVariables { get; set; } = [];

    /** Optional working directory */
    [DataMember(Name="workingDirectory")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)] 
    public Uri? WorkingDirectory { get; set; }

    /// <SUMMARY>
    /// Kind of data to expect in the `data` field. If this field is not set, the kind of data is not specified.
    /// </summary>
    [DataMember(Name = "dataKind")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
    public string? DataKind { get; set; }

    /** Optional metadata about the task.
    * Objects for specific tasks like compile, test, etc are specified in the protocol. */
    [DataMember(Name = "data")]
    [JsonProperty(NullValueHandling = NullValueHandling.Ignore)]
    public object? Data { get; set; }
}